<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav=0.3;
move_speed=3;
jump_height=5;
maxl=200;
right = true;
image_speed=0.3;

distance=0;
rotate=0;

global.xo=0;
global.yo=0;

view_rotate=1;
instance_create(x,y,player_handR);
instance_create(x,y,player_handL);

hp = 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var diff,ang,dist;
ang=scr_align(grav,maxl,4);

diff=angle_diff(ang,image_angle);
collision_ray(x,y,x+lengthdir_x(maxl,gravity_direction),y+lengthdir_y(maxl,gravity_direction),planet_par);
dist=point_distance(x,y,global.xo,global.yo);

/*handle the gradual rotation.
(1-abs(diff)/180)*diff, you will rotate faster if the
difference between your direction and the goal direction is bigger.
(1-point_distance(x,y,global.xo,global.yo)/maxl), makes sure
that you will always land the right way up*/
image_angle+=(1-abs(diff)/180)*diff*(1-dist/maxl);


if (!keyboard_check(ord("A")) &amp;&amp; !keyboard_check(ord("D")))
    sprite_index=spr_stand;
else
    {
    image_speed=0.3;
    sprite_index=spr_run;
    }
    
if (hp = 100) {
    image_index = 0
}
if (hp = 96) {
    image_index = 1
}
if (hp = 92) {
    image_index = 2
}
if (hp = 88) {
    image_index = 3
}
if (hp = 84) {
    image_index = 4
}
if (hp = 80) {
    image_index = 5
}
if (hp = 76) {
    image_index = 6
}
if (hp = 72) {
    image_index = 7
}
if (hp = 68) {
    image_index = 8
}
if (hp = 64) {
    image_index = 9
}
if (hp = 60) {
    image_index = 10
}
if (hp = 56) {
    image_index = 11
}
if (hp = 52) {
    image_index = 12
}
if (hp = 48) {
    image_index = 13
}
if (hp = 44) {
    image_index = 14
}
if (hp = 40) {
    image_index = 15
}
if (hp = 36) {
    image_index = 16
}
if (hp = 32) {
    image_index = 17
}
if (hp = 28) {
    image_index = 18
}
if (hp = 24) {
    image_index = 19
}
if (hp = 20) {
    image_index = 20
}
if (hp = 16) {
    image_index = 21
}
if (hp = 12) {
    image_index = 22
}
if (hp = 8) {
    image_index = 23
}

if (hp = 4) {
    image_index = 24
}

if (hp = 0) {
    image_index = 25
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="planet_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//don't get stuck inside planet
move_outside_obj(direction+180,32,planet_par);
speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x+lengthdir_x(speed,gravity_direction),y+lengthdir_y(speed,gravity_direction),planet_par))
{
    hspeed=lengthdir_x(jump_height,gravity_direction-180);
    vspeed=lengthdir_y(jump_height,gravity_direction-180);
    sprite_index = spr_fall;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x+=lengthdir_x(move_speed,gravity_direction+90);
y+=lengthdir_y(move_speed,gravity_direction+90);
right = true;
image_xscale=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x+=lengthdir_x(move_speed,gravity_direction-90);
y+=lengthdir_y(move_speed,gravity_direction-90);
image_xscale=-1;
right = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_rotate=!view_rotate;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room=room0)
    room_goto(room1);
else
    room_goto(room0);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,18</point>
    <point>18,18</point>
  </PhysicsShapePoints>
</object>
